//hw3 instantiation

module hw3(SW, KEY, CLOCK_50, HEX0, HEX1, HEX2, HEX3,
				HEX4, HEX5, HEX6, HEX7, LEDG, LEDR, SRAM_DQ,
				SRAM_ADDR, SRAM_LB_N, SRAM_UB_N, SRAM_CE_N,
				SRAM_OE_N, SRAM_WE_N);
		input  wire        CLOCK_50;,         //      clk.clk
		output wire [6:0]  HEX0, HEX1, HEX2, HEX3, HEX4, HEX5, HEX6, HEX7;
		output wire [7:0]  LEDG;     //     ledg.export
		output wire [17:0] LEDR;     //     ledr.export
		input  wire        KEY;   //    reset.reset_n
		inout  wire [15:0] SRAM_DQ;         //     sram.DQ
		output wire [19:0] SRAM_ADDR;       //         .ADDR
		output wire        SRAM_LB_N;       //         .LB_N
		output wire        SRAM_UB_N;       //         .UB_N
		output wire        SRAM_CE_N;       //         .CE_N
		output wire        SRAM_OE_N;       //         .OE_N
		output wire        SRAM_WE_N;       //         .WE_N
		input  wire [17:0] SW;  // switches.export
		
		hw3proc u0 (
		.clk_clk         (<connected-to-clk_clk>),         //      clk.clk
		.hex0_export     (<connected-to-hex0_export>),     //     hex0.export
		.hex1_export     (<connected-to-hex1_export>),     //     hex1.export
		.hex2_export     (<connected-to-hex2_export>),     //     hex2.export
		.hex3_export     (<connected-to-hex3_export>),     //     hex3.export
		.hex4_export     (<connected-to-hex4_export>),     //     hex4.export
		.hex5_export     (<connected-to-hex5_export>),     //     hex5.export
		.hex6_export     (<connected-to-hex6_export>),     //     hex6.export
		.hex7_export     (<connected-to-hex7_export>),     //     hex7.export
		.ledg_export     (<connected-to-ledg_export>),     //     ledg.export
		.ledr_export     (<connected-to-ledr_export>),     //     ledr.export
		.reset_reset_n   (<connected-to-reset_reset_n>),   //    reset.reset_n
		.sram_DQ         (<connected-to-sram_DQ>),         //     sram.DQ
		.sram_ADDR       (<connected-to-sram_ADDR>),       //         .ADDR
		.sram_LB_N       (<connected-to-sram_LB_N>),       //         .LB_N
		.sram_UB_N       (<connected-to-sram_UB_N>),       //         .UB_N
		.sram_CE_N       (<connected-to-sram_CE_N>),       //         .CE_N
		.sram_OE_N       (<connected-to-sram_OE_N>),       //         .OE_N
		.sram_WE_N       (<connected-to-sram_WE_N>),       //         .WE_N
		.switches_export (<connected-to-switches_export>)  // switches.export
	);

endmodule 